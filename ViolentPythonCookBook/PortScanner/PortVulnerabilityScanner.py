'''
This file is part of examples shown in a book
"Violent Python Cookbook for Hackers, Forensic Analysts, Penetration Testers and Security Engineers"
Most of the code is copied as is, or with minor changes to make naming easier to understand and some
comments may have been added where i explain to myself how everything works ( the code is not just blindly copied ).
The purpose of these files is for me to understand how the code works and become better at the security field.
------------
Antti Ruhala, Tampere University of Technology
------------
'''

import socket
def ReturnBanner(ip, port):
    try:
        socket.setdefaulttimeout(2)
        s = socket.socket() # socket() returns a socket object
        s.connect((ip, port)) # connects to a spesific port on the given ip
        banner = s.recv(1024) # receives 1024 bytes of data
        s.close()   # closes the socket (reduces connection handles by 1,
                    # socket is deallocated at 0
        return banner
    except:
        print( "Establishing the connection failed: " + str(ip) + " : " + str(port))
        return

def CheckVulns(banner):
    file = open("vuln_banners.txt",'r') # file containing some versions with knows vulnerabilities
    for line in file.readlines():
        if line.strip('\n') in banner:
            print ( "[+] Server is vulnerable: "+ banner.strip('\n') ) # removes newline

def main():

    portlist = [21,22,25,80,110]
    '''
    21 FTP
    22 SFTP / SSH
    25 SMTP
    80 HTTP / TCP
    110 POP3
    '''
    for x in range(1, 255):
        ip = 'XXX.XXX.XXX.' + str(x)
        for port in portlist:
            banner = ReturnBanner(ip, port)
            if banner:
                print( "[+] Checking 192.168.95." + str(x) + ": " + str(port) )
                CheckVulns(banner)

if __name__ == "__main__":
    main()